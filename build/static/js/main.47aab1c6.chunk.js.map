{"version":3,"sources":["components/appHeader/AppHeader.jsx","resources/img/mjolnir.png","services/MarvelService.jsx","components/spinner/Spinner.jsx","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/app/App.jsx","index.jsx"],"names":["AppHeader","_jsxs","className","children","_jsx","href","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","alt","objectFit","src","img","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","checkThumbnail","CharList","charList","newItemLoading","charEnded","onCharListLoading","onRequest","onCharListLoaded","updateCharList","newCharList","ended","charsRefs","setCharRef","push","selectedChar","forEach","classList","remove","add","focus","renderItems","arr","item","i","imgStyle","ref","props","onCharSelected","eachItem","disabled","Skeleton","_Fragment","CharInfo","charId","componentDidUpdate","prevProps","skeleton","ErrorBoundary","componentDidCatch","errorInfo","console","log","App","decoration","ReactDOM","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47aab1c6.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n  return (\n    <header className=\"app__header\">\n      <h1 className=\"app__title\">\n        <a href=\"#\">\n          <span>Marvel</span> Information Portal\n        </a>\n      </h1>\n      <nav className=\"app__menu\">\n        <ul>\n          <li>\n            <a href=\"#\">Characters</a>\n          </li>\n          /\n          <li>\n            <a href=\"#\">Comics</a>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService {\r\n  //Component is not needed here because I am working with VanillaJS class.\r\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  _apiKey = 'apikey=78c856cd3caac3f9ad37ca7a521c529b';\r\n  _baseOffset = 210;\r\n\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n    if (!res.ok) {\r\n      throw new Error(`Couldn't fetch ${url}, status: ${res.status} `);\r\n    }\r\n    return await res.json();\r\n  };\r\n\r\n  getAllCharacters = async (offset = this._baseOffset) => {\r\n    //this will allow the function to be more flexible because now it will start from the argument. And if we don’t pass this argument there, then the base offset will be used: _baseOffset = 210;\r\n\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`,\r\n    );\r\n\r\n    return res.data.results.map(this._transformCharacter);\r\n    // return this.getResource(\r\n    //   `${this._apiBase}characters?limit=9&offset=210&${this._apiKey}`\r\n    // );\r\n  };\r\n\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(\r\n      `${this._apiBase}characters/${id}?${this._apiKey}`,\r\n    );\r\n    return this._transformCharacter(res.data.results[0]); //That's it, now when the method is launched it will wait for a response and the result will be written to the 'res' variable\r\n  };\r\n\r\n  _transformCharacter = (char) => {\r\n    //Now the 'char' is res.data.results[0]\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description:\r\n        char.description.length !== 0\r\n          ? char.description.slice(0, 120) + '...'\r\n          : 'Description not found',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension, //This is how we create a single path to our image\r\n      homepage: char.urls[0].url, //here I get the first object and it has URL properties\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n}\r\n\r\nexport {MarvelService};\r\n","const Spinner = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={{\r\n        margin: \"0 auto\",\r\n        background: \"none\",\r\n        display: \"block\",\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n      }}\r\n      width=\"200px\"\r\n      height=\"200px\"\r\n      viewBox=\"0 0 100 100\"\r\n      preserveAspectRatio=\"xMidYMid\"\r\n    >\r\n      <g transform=\"translate(80,50)\">\r\n        <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.875s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.875s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n        <g transform=\"rotate(45)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.75s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.75s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(50,80)\">\r\n        <g transform=\"rotate(90)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.625s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.625s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n        <g transform=\"rotate(135)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.5s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.5s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(20,50.00000000000001)\">\r\n        <g transform=\"rotate(180)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.375s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.375s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n        <g transform=\"rotate(225)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.25s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.25s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(49.99999999999999,20)\">\r\n        <g transform=\"rotate(270)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.125s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.125s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n        <g transform=\"rotate(315)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"0s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"0s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport { Spinner };\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      alt=\"Error Photo\"\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"auto\",\r\n      }}\r\n      src={img}\r\n    />\r\n  );\r\n};\r\n\r\nexport { ErrorMessage };\r\n","import {Component} from 'react';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport {MarvelService} from '../../services/MarvelService';\nimport {Spinner} from '../spinner/Spinner';\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {\n  state = {\n    //the state may then contain some other data, not only this: { name: null, description: null, thumbnail: null, homepage: null, wiki: null}.  That's why, I put all this data into a separate Object that will characterize the character\n    char: {},\n    loading: true,\n    error: false,\n  };\n\n  marvelService = new MarvelService(); //in order to work with the JS class, we create an instance\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  onCharLoaded = (char) => {\n    this.setState({char, loading: false});\n  };\n\n  onCharLoading = () => {\n    this.setState({loading: true});\n  };\n\n  onError = () => {\n    this.setState({loading: false, error: true});\n  };\n\n  updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    this.onCharLoading();\n    this.marvelService\n      .getCharacter(id)\n      .then(this.onCharLoaded) //the argument that came from .then()  will be written to char: onCharLoaded = (char)\n      .catch(this.onError);\n  };\n\n  render() {\n    const {char, loading, error} = this.state; //since these states are already inside the 'char' object, we’ll just do this kind of destructuring\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null; //if there is no loading now or there is no error, then in this case we will return the View component\n\n    return (\n      <div className=\"randomchar\">\n        {errorMessage}\n        {spinner}\n        {content}\n        <div className=\"randomchar__static\">\n          <p className=\"randomchar__title\">\n            Random character for today!\n            <br />\n            Do you want to get to know him better?\n          </p>\n          <p className=\"randomchar__title\">Or choose another one</p>\n          <button className=\"button button__main\">\n            <div className=\"inner\" onClick={this.updateChar}>\n              try it\n            </div>\n          </button>\n          <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst View = ({char}) => {\n  const {thumbnail, description, name, homepage, wiki} = char;\n  const checkThumbnail = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n\n  return (\n    <div className=\"randomchar__block\">\n      <img src={thumbnail} alt=\"Random character\" className={checkThumbnail ? 'randomchar__errorImg' : 'randomchar__img'} />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import './charList.scss';\nimport {Spinner} from '../spinner/Spinner';\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\nimport {Component} from 'react/cjs/react.production.min';\nimport {MarvelService} from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\n\nclass CharList extends Component {\n  state = {\n    charList: [],\n    error: false,\n    loading: true,\n    newItemLoading: false,\n    offset: 9, //Every time a request to the server is successfully completed, we must increase this number by 9 in our case\n    charEnded: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateCharList();\n  }\n\n  onCharListLoading = () => {\n    this.setState({newItemLoading: true});\n  };\n\n  onRequest = (offset) => {\n    this.onCharListLoading();\n    this.marvelService.getAllCharacters(offset).then(this.onCharListLoaded).catch(this.onError);\n  };\n\n  updateCharList = () => {\n    this.marvelService.getAllCharacters().then(this.onCharListLoaded).catch(this.onError);\n  };\n\n  onCharListLoaded = (newCharList) => {\n    let ended = false; //here I check charList for an empty array or for the fact that it contains less than 9 elements.\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    this.setState(({offset, charList}) => ({\n      //this is the charList that was in the current state at the beginning, it is an empty array, then nine elements and so on\n      charList: [...charList, ...newCharList], //in this case charList is the old array and newCharList is the new one\n      loading: false,\n      newItemLoading: false,\n      offset: offset + 9,\n      charEnded: ended, //calculate it and then put it in state\n    }));\n  };\n\n  charsRefs = [];\n\n  setCharRef = (char) => {\n    this.charsRefs.push(char);\n  };\n\n  selectedChar = (id) => {\n    this.charsRefs.forEach((char) => char.classList.remove('char__item_selected'));\n    this.charsRefs[id].classList.add('char__item_selected');\n    this.charsRefs[id].focus();\n  };\n\n  onError = () => {\n    this.setState({loading: false, error: true});\n  };\n\n  renderItems(arr) {\n    const items = arr.map((item, i) => {\n      const checkThumbnail = item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n      let imgStyle = {objectFit: 'cover'};\n\n      checkThumbnail ? (imgStyle = {objectFit: 'unset'}) : (imgStyle = {objectFit: 'cover'});\n\n      return (\n        <li\n          className=\"char__item\"\n          key={item.id}\n          ref={this.setCharRef}\n          onClick={() => {\n            this.props.onCharSelected(item.id); //This ID will be passed to the App component\n            this.selectedChar(i);\n          }}>\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  render() {\n    const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n    const eachItem = this.renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? eachItem : null;\n\n    return (\n      <div className=\"char__list\">\n        <ul className=\"char__grid\">\n          {errorMessage}\n          {spinner}\n          {content}\n        </ul>\n        <button\n          className=\"button button__main button__long\"\n          disabled={newItemLoading}\n          style={{display: charEnded ? 'none' : 'block'}}\n          onClick={() => this.onRequest(offset)}>\n          <div className=\"inner\">Load More</div>\n        </button>\n      </div>\n    );\n  }\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component} from 'react/cjs/react.production.min';\nimport './charInfo.scss';\nimport {Spinner} from '../spinner/Spinner';\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport {MarvelService} from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\n\nclass CharInfo extends Component {\n  state = {\n    char: null,\n    loading: false,\n    error: false,\n  };\n\n  marvelService = new MarvelService();\n\n  componentDidMount() {\n    this.updateChar();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.charId !== prevProps.charId) {\n      this.updateChar();\n    }\n  }\n\n  updateChar = () => {\n    const {charId} = this.props;\n\n    if (!charId) {\n      return;\n    }\n\n    this.onCharLoading(); //so that before the request we will show a spinner\n    this.marvelService //and if there is already an ID, then I make a request to the server\n      .getCharacter(charId)\n      .then(this.onCharLoaded) //when a response arrives from the service in the format of one object with a character, it will be taken as a char argument and written to state\n      .catch(this.onError);\n  };\n\n  onCharLoaded = (char) => {\n    this.setState({char, loading: false});\n  };\n\n  onCharLoading = () => {\n    this.setState({loading: true});\n  };\n\n  onError = () => {\n    this.setState({loading: false, error: true});\n  };\n\n  render() {\n    const {char, loading, error} = this.state;\n\n    const skeleton = char || loading || error ? null : <Skeleton />; //If any of this exists, then we don’t render anything.\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null; //It says here that it is not loading, not an error, and there is already a character. so I wrote: !char\n\n    return (\n      <div className=\"char__info\">\n        {skeleton}\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst View = ({char}) => {\n  //for the convenience of working with this large component from the rendering method, it was divided into two different components, one of them will deal only with the interface, the other with logic and state\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n  let imgStyle = {objectFit: 'cover'};\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {objectFit: 'contain'};\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with this character ('}\n        {comics.slice(0, 10).map((item, i) => {\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import {Component} from 'react/cjs/react.production.min';\r\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({error: true});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      //if we have (this.state.error === true) then in this case we will render a spare interface\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary; //I will use this in App.jsx\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from 'react/cjs/react.production.min';\nimport AppHeader from '../appHeader/AppHeader';\nimport RandomChar from '../randomChar/RandomChar';\nimport CharList from '../charList/CharList';\nimport CharInfo from '../charInfo/CharInfo';\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n  state = {\n    selectedChar: null,\n  };\n\n  onCharSelected = (id) => {\n    this.setState({\n      selectedChar: id,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app\">\n        <AppHeader />\n        <main>\n          <ErrorBoundary>\n            <RandomChar />\n          </ErrorBoundary>\n          <div className=\"char__content\">\n            <ErrorBoundary>\n              <CharList onCharSelected={this.onCharSelected} />\n            </ErrorBoundary>\n            <ErrorBoundary>\n              {/* call ErrorBoundary, open it and place our problematic component inside */}\n              <CharInfo charId={this.state.selectedChar} />\n            </ErrorBoundary>\n          </div>\n          <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/app/App\";\nimport \"./style/style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}