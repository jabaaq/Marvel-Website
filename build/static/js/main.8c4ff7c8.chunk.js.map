{"version":3,"sources":["components/appHeader/AppHeader.jsx","resources/img/mjolnir.png","hooks/http.hook.jsx","services/MarvelService.jsx","components/spinner/Spinner.jsx","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.jsx","components/randomChar/RandomChar.jsx","components/charList/CharList.jsx","components/skeleton/Skeleton.jsx","components/charInfo/CharInfo.jsx","components/errorBoundary/ErrorBoundary.jsx","resources/img/vision.png","components/pages/MainPage.jsx","components/comicsList/ComicsList.jsx","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.jsx","components/pages/ComicsPage.jsx","components/pages/404.jsx","components/pages/SingleComicPage.jsx","components/app/App.jsx","index.jsx"],"names":["AppHeader","_jsxs","className","children","_jsx","Link","to","NavLink","end","style","_ref","isActive","color","_ref2","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformComics","comics","id","title","description","pageCount","thumbnail","path","extension","language","textObjects","prices","price","_transformCharacter","char","name","slice","homepage","urls","wiki","items","getAllCharacters","offset","res","results","map","getCharacter","getAllComics","getComics","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","alt","objectFit","src","img","View","checkThumbnail","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","setOffSet","charEnded","setCharEnded","onRequest","initial","onCharListLoaded","newCharList","ended","charsRefs","useRef","eachItem","arr","item","i","imgStyle","ref","el","current","onCharSelected","forEach","classList","remove","add","focus","renderItems","disabled","Skeleton","_Fragment","CharInfo","charId","skeleton","ErrorBoundary","Component","constructor","state","componentDidCatch","errorInfo","console","log","this","setState","render","MainPage","selectedChar","decoration","ComicsList","comicsList","setComicsList","comicsEnded","setComicsEnded","onComicsListLoaded","newComicsList","AppBanner","avengers","avengersLogo","ComicsPage","Page404","textAlign","fontWeight","fontSize","marginTop","SingleComicPage","comicId","useParams","comicIdToNum","Object","join","comic","setComic","updateComic","onComicLoaded","App","Router","Routes","Route","element","ReactDOM","createRoot","document","getElementById","React","StrictMode"],"mappings":"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","file":"static/js/main.8c4ff7c8.chunk.js","sourcesContent":["import {Link, NavLink} from 'react-router-dom';\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n  return (\n    <header className=\"app__header\">\n      <h1 className=\"app__title\">\n        <Link to=\"/\">\n          <span>Marvel</span> Information Portal\n        </Link>\n      </h1>\n      <nav className=\"app__menu\">\n        <ul>\n          <li>\n            <NavLink end style={({isActive}) => ({color: isActive ? '#9F0013' : 'inherit'})} to=\"/\">\n              Characters\n            </NavLink>\n          </li>\n          /\n          <li>\n            <NavLink style={({isActive}) => ({color: isActive ? '#9F0013' : 'inherit'})} to=\"/comics\">\n              {/* here I removed the 'end' so that all links that contained '/comics' would also be colored in this color */}\n              Comics\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {useState, useCallback} from 'react';\r\n\r\nconst useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n      setLoading(true);\r\n\r\n      /*need to think about how to throw an error because this method will only send the request to the server but will not process it using .then / .Catch or .finally */\r\n\r\n      try {\r\n        const response = await fetch(url, {method, body, headers}); //sent a request and the answer will be placed in response\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Couldn't fetch ${url}, status: ${response.status} `);\r\n        }\r\n\r\n        const data = await response.json(); //since the answer is just a promise, then I get specific data response.json();\r\n        setLoading(false); //if the data has loaded, that is, the code has reached this section, then loading completed\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    [],\r\n  );\r\n\r\n  const clearError = useCallback(() => setError(null), []);\r\n\r\n  return {loading, error, request, clearError}; //Well, since this is a custom hook, let’s just return them\r\n};\r\n\r\nexport {useHttp};\r\n","import {useHttp} from '../hooks/http.hook';\r\n\r\nconst useMarvelService = () => {\r\n  const {loading, request, error, clearError} = useHttp(); //destructuring syntax\r\n\r\n  //Component is not needed here because I am working with VanillaJS class.\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=78c856cd3caac3f9ad37ca7a521c529b';\r\n  const _baseOffset = 210;\r\n\r\n  const getAllCharacters = async (offset = _baseOffset) => {\r\n    //this will allow the function to be more flexible because now it will start from the argument. And if we don’t pass this argument there, then the base offset will be used: _baseOffset = 210;\r\n\r\n    const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n    return _transformCharacter(res.data.results[0]);\r\n    //That's it, now when the method is launched it will wait for a response and the result will be written to the 'res' variable\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComics = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      title: comics.title,\r\n      description: comics.description || 'There is no description',\r\n      pageCount: comics.pageCount ? `${comics.pageCount} Pages` : 'There is no information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      prices: comics.prices[0].price ? `${comics.prices[0].price + '$'}` : 'NOT AVAILABLE',\r\n    };\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    //Now the 'char' is res.data.results[0]\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description.length !== 0 ? char.description.slice(0, 120) + '...' : 'Description not found',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension, //This is how we create a single path to our image\r\n      homepage: char.urls[0].url, //here I get the first object and it has URL properties\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  /*since this function (made a custom hook from the class component) we can return something from it since this is such a custom hook also in order to use the service. */\r\n\r\n  return {loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics};\r\n};\r\n\r\nexport {useMarvelService};\r\n","const Spinner = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      style={{\r\n        margin: \"0 auto\",\r\n        background: \"none\",\r\n        display: \"block\",\r\n        width: \"50px\",\r\n        height: \"50px\",\r\n      }}\r\n      width=\"200px\"\r\n      height=\"200px\"\r\n      viewBox=\"0 0 100 100\"\r\n      preserveAspectRatio=\"xMidYMid\"\r\n    >\r\n      <g transform=\"translate(80,50)\">\r\n        <g transform=\"rotate(0)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.875s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.875s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n        <g transform=\"rotate(45)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.75s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.75s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(50,80)\">\r\n        <g transform=\"rotate(90)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.625s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.625s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n        <g transform=\"rotate(135)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.5s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.5s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(20,50.00000000000001)\">\r\n        <g transform=\"rotate(180)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.375s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.375s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n        <g transform=\"rotate(225)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.25s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.25s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(49.99999999999999,20)\">\r\n        <g transform=\"rotate(270)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"-0.125s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"-0.125s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n      <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n        <g transform=\"rotate(315)\">\r\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              type=\"scale\"\r\n              begin=\"0s\"\r\n              values=\"1.5 1.5;1 1\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n            ></animateTransform>\r\n            <animate\r\n              attributeName=\"fillOpacity\"\r\n              keyTimes=\"0;1\"\r\n              dur=\"1s\"\r\n              repeatCount=\"indefinite\"\r\n              values=\"1;0\"\r\n              begin=\"0s\"\r\n            ></animate>\r\n          </circle>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport { Spinner };\r\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from \"./error.gif\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      alt=\"Error Photo\"\r\n      style={{\r\n        display: \"block\",\r\n        width: \"250px\",\r\n        height: \"250px\",\r\n        objectFit: \"contain\",\r\n        margin: \"auto\",\r\n      }}\r\n      src={img}\r\n    />\r\n  );\r\n};\r\n\r\nexport { ErrorMessage };\r\n","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport {useMarvelService} from '../../services/MarvelService';\nimport {Spinner} from '../spinner/Spinner';\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\nimport {useEffect, useState} from 'react';\n\nconst RandomChar = () => {\n  const [char, setChar] = useState({});\n\n  const {loading, error, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n    getCharacter(id).then(onCharLoaded); //the argument that came from .then()  will be written to char: onCharLoaded = (char)\n  };\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error) ? <View char={char} /> : null; //if there is no loading now or there is no error, then in this case we will return the View component\n\n  return (\n    <div className=\"randomchar\">\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button className=\"button button__main\">\n          <div className=\"inner\" onClick={updateChar}>\n            try it\n          </div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({char}) => {\n  const {thumbnail, description, name, homepage, wiki} = char;\n  const checkThumbnail = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className={checkThumbnail ? 'randomchar__errorImg' : 'randomchar__img'}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import {useState, useEffect, useRef} from 'react';\nimport './charList.scss';\nimport {Spinner} from '../spinner/Spinner';\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\nimport {useMarvelService} from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffSet] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const {loading, error, getAllCharacters} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllCharacters(offset).then(onCharListLoaded);\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false; //here I check charList for an empty array or for the fact that it contains less than 9 elements.\n    if (newCharList && newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffSet((offset) => offset + 9);\n    setCharEnded((charEnded) => ended);\n  };\n\n  const charsRefs = useRef([]);\n\n  const selectedChar = (id) => {\n    charsRefs.current.forEach((char) => char.classList.remove('char__item_selected'));\n    charsRefs.current[id].classList.add('char__item_selected');\n    charsRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      const checkThumbnail = item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg';\n      let imgStyle = {objectFit: 'cover'};\n\n      checkThumbnail ? (imgStyle = {objectFit: 'unset'}) : (imgStyle = {objectFit: 'cover'});\n\n      return (\n        <li\n          className=\"char__item\"\n          key={item.id}\n          ref={(el) => (charsRefs.current[i] = el)}\n          onClick={() => {\n            props.onCharSelected(item.id); //This ID will be passed to the App component\n            selectedChar(i);\n          }}>\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const eachItem = renderItems(charList);\n\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading && !newItemLoading ? <Spinner /> : null; //in simple words it sounds like I have a download, but at the same time this is NOT a download of new components\n  return (\n    <div className=\"char__list\">\n      <ul className=\"char__grid\">\n        {errorMessage}\n        {spinner}\n        {eachItem}\n      </ul>\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{display: charEnded ? 'none' : 'block'}}\n        onClick={() => onRequest(offset)}>\n        <div className=\"inner\">Load More</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func,\n};\n\nexport default CharList;\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport {Spinner} from '../spinner/Spinner';\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton';\nimport {useMarvelService} from '../../services/MarvelService';\nimport PropTypes from 'prop-types';\nimport {useEffect, useState} from 'react';\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const {error, loading, getCharacter, clearError} = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n  }, []);\n\n  useEffect(() => {\n    updateChar();\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const {charId} = props;\n\n    if (!charId) {\n      return;\n    }\n    clearError(); //and here, before making a request to the server, we also call Clear\n    getCharacter(charId).then(onCharLoaded); //when a response arrives from the service in the format of one object with a character, it will be taken as a char argument and written to state\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const skeleton = char || loading || error ? null : <Skeleton />; //If any of this exists, then we don’t render anything.\n  const errorMessage = error ? <ErrorMessage /> : null;\n  const spinner = loading ? <Spinner /> : null;\n  const content = !(loading || error || !char) ? <View char={char} /> : null; //It says here that it is not loading, not an error, and there is already a character. so I wrote: !char\n\n  return (\n    <div className=\"char__info\">\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  );\n};\n\nconst View = ({char}) => {\n  //for the convenience of working with this large component from the rendering method, it was divided into two different components, one of them will deal only with the interface, the other with logic and state\n  const {name, description, thumbnail, homepage, wiki, comics} = char;\n  let imgStyle = {objectFit: 'cover'};\n  if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n    imgStyle = {objectFit: 'contain'};\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : 'There is no comics with this character ('}\n        {comics.slice(0, 10).map((item, i) => {\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import {Component} from 'react/cjs/react.production.min';\r\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false,\r\n  };\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({error: true});\r\n  }\r\n\r\n  render() {\r\n    if (this.state.error) {\r\n      //if we have (this.state.error === true) then in this case we will render a spare interface\r\n      return <ErrorMessage />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary; //I will use this in App.jsx\r\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {useState} from 'react';\r\n\r\nimport RandomChar from '../randomChar/RandomChar';\r\nimport CharList from '../charList/CharList';\r\nimport CharInfo from '../charInfo/CharInfo';\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () => {\r\n  const [selectedChar, setChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setChar(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorBoundary>\r\n        <RandomChar />\r\n      </ErrorBoundary>\r\n      <div className=\"char__content\">\r\n        <ErrorBoundary>\r\n          <CharList onCharSelected={onCharSelected} />\r\n        </ErrorBoundary>\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport {MainPage};\r\n","import './comicsList.scss';\nimport {useState, useEffect, useRef} from 'react';\nimport {Link} from 'react-router-dom';\nimport {useMarvelService} from '../../services/MarvelService';\nimport {Spinner} from '../spinner/Spinner';\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffSet] = useState(210);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const {loading, error, getAllComics} = useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset).then(onComicsListLoaded);\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false; //here I check charList for an empty array or for the fact that it contains less than 9 elements.\n    if (newComicsList && newComicsList.length < 9) {\n      ended = true;\n    }\n\n    setComicsList((comicsList) => [...comicsList, ...newComicsList]);\n    setNewItemLoading((newItemLoading) => false);\n    setOffSet((offset) => offset + 8);\n    setComicsEnded((comicsEnded) => ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            {/*Next you need to specify which comic will open*/}\n            <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.prices}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  const eachItem = renderItems(comicsList);\n  const errorMessage = error ? <error /> : null;\n  const spinner = loading ? <Spinner /> : null;\n\n  return (\n    <div className=\"comics__list\">\n      {eachItem}\n      {errorMessage}\n      {spinner}\n\n      <button onClick={() => onRequest(offset)} className=\"button button__main button__long\">\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n  return (\n    <div className=\"app__banner\">\n      <img src={avengers} alt=\"Avengers\" />\n      <div className=\"app__banner-text\">\n        New comics every week!\n        <br />\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt=\"Avengers logo\" />\n    </div>\n  );\n};\n\nexport {AppBanner};\n","import ComicsList from '../comicsList/ComicsList';\r\nimport {AppBanner} from '../appBanner/AppBanner';\r\n\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport {ComicsPage};\r\n","import {ErrorMessage} from '../errorMessage/ErrorMessage';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div>\r\n      <ErrorMessage />\r\n      <p style={{textAlign: 'center', fontWeight: 'bold', fontSize: '24px'}}>Page doesn't exist</p>\r\n      <Link\r\n        style={{display: 'block', textAlign: 'center', fontWeight: 'bold', fontSize: '24px', marginTop: '30px'}}\r\n        to=\"/\">\r\n        Back to main page\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {Page404};\r\n","import './singleComicPage.scss';\r\nimport {Spinner} from '../spinner/Spinner';\r\nimport {ErrorMessage} from '../errorMessage/ErrorMessage';\r\nimport {useMarvelService} from '../../services/MarvelService';\r\nimport {useEffect, useState} from 'react';\r\nimport {AppBanner} from '../appBanner/AppBanner';\r\n\r\nimport {useParams, Link} from 'react-router-dom';\r\n\r\nconst SingleComicPage = () => {\r\n  const comicId = useParams();\r\n  const comicIdToNum = +Object.values(comicId).join('');\r\n  const [comic, setComic] = useState(null); //there will be an object with all the data about this comic\r\n  const {error, loading, getComics, clearError} = useMarvelService();\r\n\r\n  useEffect(() => {\r\n    updateComic();\r\n  }, [comicIdToNum]); //Why exactly this logic? The fact is that when the user is on our this page, he can manually change the unique identifier in the URL. and in general, it will go to some other comic and so that we have this component redrawn correctly, we will actually use useEffect And build on this [comicId] parameter, which comes to us from the URL\r\n\r\n  const updateComic = () => {\r\n    clearError();\r\n    getComics(comicIdToNum).then(onComicLoaded);\r\n  };\r\n\r\n  const onComicLoaded = (comic) => {\r\n    setComic(comic);\r\n  };\r\n\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n  const spinner = loading ? <Spinner /> : null;\r\n  const content = !(loading || error || !comic) ? <View comic={comic} /> : null;\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      {errorMessage}\r\n      {spinner}\r\n      {content}\r\n    </>\r\n  );\r\n};\r\n\r\nconst View = ({comic}) => {\r\n  //I do this so that in the same way, using the ternary operator, I can place here (into SingleComicPage return()) either a spinner or an error component or content that interests us\r\n  const {title, description, pageCount, thumbnail, language, prices} = comic; //here I will need to pull out the data that will be in the comic and which will be used\r\n\r\n  return (\r\n    <div className=\"single-comic\">\r\n      <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n      <div className=\"single-comic__info\">\r\n        <h2 className=\"single-comic__name\">{title}</h2>\r\n        <p className=\"single-comic__descr\">{description}</p>\r\n        <p className=\"single-comic__descr\">{pageCount}</p>\r\n        <p className=\"single-comic__descr\">Language: {language}</p>\r\n        <div className=\"single-comic__price\">{prices}</div>\r\n      </div>\r\n      <Link to=\"/comics\" className=\"single-comic__back\">\r\n        Back to all\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {SingleComicPage};\r\n","import {BrowserRouter as Router, Route, Routes} from 'react-router-dom';\nimport AppHeader from '../appHeader/AppHeader';\n\nimport {MainPage, ComicsPage, Page404, SingleComicPage} from '../pages';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"app\">\n        <AppHeader />\n        <main>\n          <Routes>\n            <Route path=\"/\" element={<MainPage />} />\n            <Route path=\"/comics\" element={<ComicsPage />} />\n            <Route path=\"/comics/:comicId\" element={<SingleComicPage />} />\n            <Route path=\"*\" element={<Page404 />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n// import {ReactDOM} from 'react';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n"],"sourceRoot":""}